import string
import random

import datetime
import numpy as np
from utils.pycui import pycui
import angr
import subprocess
import os
from angr import SimFileStream
import claripy
import itertools
import random
import logging
import time
from pip import main
logging.getLogger('angr.manager').setLevel(logging.INFO)  # 用来记录日志

color = pycui()
random_scanf_num = []


def format_cases(cases):
    # print(cases)
    printables_str = string.printable[:95]
    new_cases = []
    for case in cases:
        # random_idx = random.randint(0,9)
        random_idx = 5
        arg1 = "".join([printables_str[i] for i in case[:random_idx]])
        arg2 = "".join([printables_str[i] for i in case[random_idx:10]])
        input_data = "".join([printables_str[i] for i in case[10:]]).encode()
        # print(r,c)
        # print(case)
        new_cases.append([arg1, arg2, input_data])
    return new_cases


# from angr.procedures.stubs.format_parser import ScanfFormatParser

def pass_cases_to_DSE_and_get_new_case_back_to_GA(pass_cases_, target, visited_addr):
    path_to_binary = os.path.join(target.target_exe_path, target.target_name)
    project = angr.Project(path_to_binary)

    class ReplacementFscanf(angr.SimProcedure):
        def run(self, ptr, format_string_ptr, param0):
            scanf0_address = param0
            a = self.state.memory.load(format_string_ptr, 2)
            # print(a)
            format_str = self.state.solver.eval(a, cast_to=bytes)
            # def drop_state(state):
            #     if "idx" in state.globals.keys():
            #         return state.globals['idx'] > 19
            #     else:
            #         return False
            # simulation.drop(filter_func=drop_state)
            if self.state.globals['concrect'] == 1:
                passed_num = 0
                if self.state.globals['idx'] >= 23:
                    passed_num = 0x0a
                    self.state.memory.store(scanf0_address, passed_num)
                    return
                else:
                    passed_num = self.state.globals['case'][self.state.globals['idx']]
                # color.info(f"[x] scanf get num: {passed_num}")
                if format_str == b'%f':
                    self.state.memory.store(scanf0_address, claripy.FPV(
                        float(passed_num), sort=self.state.solver.fp.FSORT_FLOAT))

                if format_str == b'%d':
                    self.state.memory.store(scanf0_address, claripy.BVV(
                        int(passed_num), 8), endness=project.arch.memory_endness)
                self.state.globals['idx'] += 1

            else:
                color.error(
                    f"长度--{len(self.state.globals['scanf_solutions'])}")
                num = 0
                # color.error(format_string_ptr)

                if format_str == b'%f':
                    num = random.random()
                    self.state.memory.store(scanf0_address, claripy.FPV(
                        num, sort=self.state.solver.fp.FSORT_FLOAT))

                if format_str == b'%d':
                    num = random.randint(1, 3)
                    # num = claripy.BVS("num")
                    self.state.memory.store(
                        scanf0_address, claripy.BVV(num, 8))
                random_scanf_num.append(num)

                if not self.state.globals['scanf_solutions']:
                    self.state.globals['scanf_solutions'] = [num]
                else:
                    self.state.globals['scanf_solutions'].append(num)

            # scanf1_address = param1
            # self.state.memory.store(scanf1_address, scanf1, endness=project.arch.memory_endness)

            return 1

    class ReplacementSscanf(angr.SimProcedure):
        def run(self, ptr, format_string_ptr, param0, param1):
            # simulation.drop(lambda x:x.globals['idx']>=23)
            a = self.state.memory.load(format_string_ptr, 30)
            color.warning(
                f"split before format_str is {self.state.solver.eval(a,cast_to=bytes)}")
            format_str = self.state.solver.eval(
                a, cast_to=bytes).split(b'\x00')[0]
            color.warning(f"format_str is {format_str}")
            if self.state.globals['concrect'] == 1:
                color.info("进入具体执行...")
                if b"%d" in format_str and b"%f" not in format_str:
                    num = self.state.globals['case'][self.state.globals['idx']]
                    color.warning(f"num is:{num}")
                    self.state.globals['idx'] += 1
                    self.state.memory.store(param0, int(
                        num), endness=project.arch.memory_endness)
                    return 1
                elif b"%f" in format_str and b"%d" not in format_str:
                    num = self.state.globals['case'][self.state.globals['idx']]
                    color.warning(f"num is:{num}")

                    self.state.globals['idx'] += 1
                    self.state.memory.store(param0, claripy.FPV(
                        float(num), sort=self.state.solver.fp.FSORT_FLOAT))
                    return 1
                elif b"%d%f" in format_str:
                    int_num = self.state.globals['case'][self.state.globals['idx']]
                    color.warning(f"int_num is:{int_num}")
                    self.state.globals['idx'] += 1
                    float_num = self.state.globals['case'][self.state.globals['idx']]
                    color.warning(f"float_num is:{float_num}")
                    self.state.globals['idx'] += 1
                    self.state.memory.store(param0, int(
                        int_num), endness=project.arch.memory_endness)
                    self.state.memory.store(param1, claripy.FPV(
                        float(float_num), sort=self.state.solver.fp.FSORT_FLOAT))

            else:
                if b"%d" in format_str and b"%f" not in format_str:
                    num = int(random.randint(1, 4))
                    # num = 1
                    color.error(f"num is {num}")
                    random_scanf_num.append(num)
                    self.state.memory.store(param0, int(
                        num), endness=project.arch.memory_endness)

                    return 1
                elif b"%f" in format_str and b"%d" not in format_str:
                    num = random.random()
                    random_scanf_num.append(num)

                    self.state.memory.store(param0, claripy.FPV(
                        num, sort=self.state.solver.fp.FSORT_FLOAT))
                    return 1
                elif b"%d%f" in format_str:
                    int_num = random.randint(1, 4)
                    float_num = random.random()
                    random_scanf_num.append(int_num)
                    random_scanf_num.append(float_num)
                    # store_nums = [int_num,float_num]
                    self.state.memory.store(param0, int(
                        int_num), endness=project.arch.memory_endness)
                    self.state.memory.store(param1, claripy.FPV(
                        float_num, sort=self.state.solver.fp.FSORT_FLOAT))
                    return 2
            # color.warning(f"format_str is {format_str}")
            # exit(0)
            # return 2

    class ReplacementFgets(angr.SimProcedure):
        # Finish the parameters to the scanf function. Hint: 'scanf("%u %u", ...)'.
        # (!)
        def run(self, address, size, file_dp):
            # scanf0 = claripy.BVS('scanf0', 8)
            # scanf1 = claripy.BVS('scanf1', 8)
            # self.state.solver.add(scanf0>48,scanf0<58)
            # self.state.solver.add(scanf1>48,scanf1<58)
            # scanf0_address = param0
            value = self.state.globals['case'][2]
            self.state.memory.store(
                address, value, endness=project.arch.memory_endness)
            # self.state.memory.store(address, scanf0.concat(b' ',scanf1,b'\n'), endness=project.arch.memory_endness)
            # scanf1_address = param1
            # self.state.memory.store(scanf1_address, scanf1, endness=project.arch.memory_endness)

            return 1

    class ReplacementFputc(angr.SimProcedure):
        # Finish the parameters to the scanf function. Hint: 'scanf("%u %u", ...)'.
        # (!)
        def run(self, address, file_dp):
            # scanf0 = claripy.BVS('scanf0', 8)
            # scanf1 = claripy.BVS('scanf1', 8)
            # self.state.solver.add(scanf0>48,scanf0<58)
            # self.state.solver.add(scanf1>48,scanf1<58)
            # scanf0_address = param0
            # value = self.state.memory.load(address,1)
            # _str = self.state.solver.eval(value,cast_to=bytes)
            # color.error(_str)
            # self.state.memory.store(address, scanf0.concat(b' ',scanf1,b'\n'), endness=project.arch.memory_endness)
            # scanf1_address = param1
            # self.state.memory.store(scanf1_address, scanf1, endness=project.arch.memory_endness)

            return 1
    # project.hook_symbol('__isoc99_fscanf', ReplacementFscanf())
    # project.hook_symbol('__isoc99_sscanf', ReplacementSscanf())
    # project.hook_symbol('fgets', ReplacementFgets())
    # project.hook_symbol('fputc', ReplacementFputc())

    # cases = format_cases(pass_cases_)
    # 1.进行具体执行
    # print(cases)
    # visited_state_addr = visited_addr
    # # visited_state = []
    # for case in cases:
    #     color.info(f"concrect case is: {case}")
    #     initial_state = project.factory.full_init_state(
    #         args=[path_to_binary, case[0], case[1]],
    #         # input = SimFileStream(name='stdin',content=case[2]+b'\n',has_end=True)
    #         # stdin = case[2]+b'\n'
    #     )
    #     simulation = project.factory.simgr(initial_state)
    #     initial_state.globals['case'] = case
    #     # initial_state.globals['idx'] = 3
    #     # initial_state.globals['concrect'] = 1

    #     while simulation.active:
    #         simulation.step()

    #         print("active length:", len(simulation.active))
    #         for state in simulation.active:
    #             # print(case)
    #             print("constrains length is", len(state.solver.constraints))
    #             # color.info(f"this state's idx is: {state.globals['idx']}")
    #             if state.addr not in visited_state_addr:
    #                 visited_state_addr.append(state.addr)
    #                 # visited_state.append(state)
    #             # def dd(state):
    #             #     # color.error(f"随机数长度-->{len(random_scanf_num)}")
    #             #     return len(state.solver.constraints) > 80
    #             # simulation.drop(filter_func=dd)
    #             # print("active state input:  ",state.posix.dumps(0))
    #             print("active state output:  ", state.posix.dumps(1))
    #             print("visited length:  ", len(visited_addr))
    #         #  print(simulation.stashes)
    #             print("active length is", len(simulation.active))
    #     color.warning(f"visited addr length is:{len(visited_state_addr)}")

    # color.success(f"DSE store all visited state address:{visited_state_addr}")
    # color.success(
        # f"all visited state address length is:{len(visited_state_addr)}")
    # # print(simulation.deadended[0].posix.dumps(0))
    # # print(simulation.deadended[0].posix.dumps(1))
    # #
    # exit(0)

    # 2.进行符号执行，获取新的状态地址
    st = time.time()
    arg1 = [claripy.BVS(f'ch_{i}', 8) for i in range(5)]
    arg2 = [claripy.BVS(f'ch_{i}', 8) for i in range(5)]
    stdin = [claripy.BVS(f'stdin_{i}', 8)for i in range(20)]
    # v2 = claripy.BVS('v2', 24)
    # v3 = claripy.BVS('v3', 8)

    initial_state = project.factory.entry_state(
        args=[path_to_binary, claripy.Concat(*arg1), claripy.Concat(*arg2)],
        # input=claripy.Concat(*flags+[claripy.BVV(b'\n')])
        stdin=claripy.Concat(*stdin)
    )
    for i in stdin:
        initial_state.solver.add(i >= 0x20, i <= 0x7e)
    for i in arg1+arg2:
        initial_state.solver.add(i >= 0x20, i <= 0x7e)
    simulation = project.factory.simgr(initial_state,)

    # initial_state.globals['concrect'] = 0
    # initial_state.globals['scanf_solutions'] = []
    new_states = []
    while simulation.active:
        for state in simulation.active:
            color.warning(f"visited length is: {len(visited_addr)}")

            color.warning(f"active length is: {len(simulation.active)}")
            print("constrains length is: ", len(state.solver.constraints))
            print("active state input:  ", state.posix.dumps(0))
            ans1 = b""
            for i in arg1:
                ans1 += state.solver.eval(i, cast_to=bytes)
            print("ans1:", ans1)
            ans2 = b""
            for i in arg2:
                ans2 += state.solver.eval(i, cast_to=bytes)
            print("ans2:", ans2)
            ans3 = b""
            for i in stdin:
                ans3 += state.solver.eval(i, cast_to=bytes)
            print("ans3:", ans3)
            # color.error(f"长度-->{len(state.globals['scanf_solutions'])}")

            def dd(state):
                # color.error(f"长度-->{len(state.globals['scanf_solutions'])}")
                return random.random() < 0.7
            if len(simulation.active) > 200:
                simulation.drop(filter_func=dd)

            print("active state output:  ", state.posix.dumps(1))
            if state.addr not in visited_addr:
                color.success(
                    f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S ")}DSE found the new state!')
                new_states.append(state)
                visited_addr.append(state.addr)
                subprocess.run(args=[os.path.join(
                    target.target_exe_path, target.target_name), ans1, ans2], input=state.posix.dumps(0), check=False)

        simulation.step()

        if len(new_states) > 30 or time.time()-st > 3*60:
            break
    # exit(0)
    print(simulation.stashes)
    if simulation.unsat:
        print(simulation.unsat[0].solver.constraints)
    if not new_states:
        color.warning("no more state found!!!")
        print(simulation.stashes)
        time.sleep(3)
    new_DSE_cases = []
    for new_st in new_states:
        print("active state input:  ", new_st.posix.dumps(0))
        print("active state output:  ", new_st.posix.dumps(1))
        ans1 = b""
        for i in arg1:
            ans1 += state.solver.eval(i, cast_to=bytes)
        print("ans1:", ans1)
        ans2 = b""
        for i in arg2:
            ans2 += state.solver.eval(i, cast_to=bytes)
        print("ans2:", ans2)
        ans3 = b""
        for i in stdin:
            ans3 += state.solver.eval(i, cast_to=bytes)
        print("ans3:", ans3)

        new_DSE_cases.append([ans1.decode(), ans2.decode(), ans3.decode()])
    # exit(0)
    return new_DSE_cases
    # def tmp(state):
    #     color.info(f"active length is:{len(simulation.active)}")
    #     color.info(f"constraint length is:{len(state.solver.constraints)}")
    #     print("active state input:  ",state.posix.dumps(0))
    #     print("active state output:  ",state.posix.dumps(1))

    #     ans = ""
    #     for i in [v1,v2,v3]:
    #         ans += str(state.solver.eval(i))+" "
    #     # for i in flags1:
    #         # ans += str(state.solver.eval(i))+" "
    #     print(ans)
    #     print(random_scanf_num)
    #     scanf_stored_solution = state.globals['scanf_solutions']
    #     if scanf_stored_solution:
    #         tmp = list(map(str, map(state.solver.eval, scanf_stored_solution)))
    #         print(tmp)
    #     out = state.posix.dumps(1)
    #     return b'arrive2' in out

    # simulation.explore(find=tmp)
    # print("finished simulation:",simulation.stashes)
    # print(len(simulation.found))
    # if simulation.found:
    # state = simulation.found[0]
    #     color.success("[x]found!!!!!!!!")
    #     print("found state input:  ",state.posix.dumps(0))
    #     print("found state input:  ",state.posix.dumps(1))
    #     ans = ""
    #     for i in [v1,v2,v3]:
    #         ans += str(state.solver.eval(i,cast_to=bytes))+" "
    #     # for i in flags1:
    #         # ans += str(state.solver.eval(i))+" "
    #     print(ans)
    #     print(random_scanf_num)
    #     scanf_stored_solution = state.globals['scanf_solutions']
    #     if scanf_stored_solution:
    #         tmp = list(map(str, map(state.solver.eval, scanf_stored_solution)))
    #         print(tmp)
    # else:
    #     color.error("no found!")

    # initial_state.globals['concrect'] = 0
    # initial_state.globals['scanf_solutions'] = []
    # initial_state.globals['sscanf_solutions'] = []
    # new_states = []
    # while simulation.active:
    # for state in simulation.active:
    # print("active state input:  ",state.posix.dumps(0))
    # print("active state output:  ",state.posix.dumps(1))
    # if state.addr not in visited_state_addr:
    # color.success(f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S ")}DSE found the new state!')
    # new_states.append(state)
    # simulation.step()
    # if len(new_states)>3:
    # break
    # if simulation.unsat:
    #     print(simulation.unsat[0].solver.constraints)


if __name__ == "__main__":
    from main_totinfo import Target
    target = Target(num_points_=32, exe_path_=os.path.join(os.path.abspath(
        os.path.dirname(__file__)), "schedule2", "source.alt"), target_name_="schedule2")
    cases = [
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        ["4", "5", "7", "2", "6", "1", "9", "6", "8", "4", "3", "1", "8", "1", "5", "8", "9", "2", "4", "3", "1", "8", "2", "1", "4", "8", "8", "5", "6", "3", "1", "8", "8", "7", "6", "6", "7", "8", "8", "9", "5", "4", "7", "3", "2", "4", "6", "1", "3", "7", "7", "1",
            "7", "5", "8", "9", "8", "3", "7", "6", "6", "5", "6", "6", "5", "7", "2", "9", "6", "3", "6", "3", "4", "1", "3", "9", "2", "1", "5", "9", "5", "7", "2", "9", "6", "1", "3", "6", "8", "3", "1", "2", "5", "4", "1", "5", "2", "8", "5", "2", "3", "4", "4"],
        # [ "4","5","7","2","6","1","9","6","8","4","3","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","1","8","1","8","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","5","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "4","4","6","9","7","6","7","6","5","7","1","6","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","8","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","9","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","5","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","1","8","1","8","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","5","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","8","4","3","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","5","7","1","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","1","8","1","8","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","5","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "4","4","6","9","7","6","7","6","5","7","1","6","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","8","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","9","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","5","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","1","8","1","8","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","5","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","2","7","6","7","6","5","7","1","8","7","1","6","4","2","9","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","1","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","9","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
        # [ "1","4","6","9","7","6","7","6","5","7","1","8","7","1","6","4","2","1","2","1","4","5","3","2","9","9","9","1","6","2","4","8","8","6","2","3","6","3","5","5","7","7","1","4","6","8","2","8","5","1","3","8","5","9","8","5","3","6","5","1","4","4","9","7","6","1","7","8","6","5","3","9","7","1","4","9","4","4","4","1","5","5","5","1","2","7","6","1","1","9","6","7","5","7","5","4","5","4","2","7","6","9","3" ],
        # [ "4","5","7","2","6","1","9","6","8","4","3","1","8","1","5","8","9","2","4","3","1","8","2","1","4","8","8","5","6","3","1","8","8","7","6","6","7","8","8","9","5","4","7","3","2","4","6","1","3","7","7","1","7","5","8","9","8","3","7","6","6","5","6","6","5","7","2","9","6","3","6","3","4","1","3","9","2","1","5","9","5","7","2","9","6","1","3","6","8","3","1","2","5","4","1","5","2","8","5","2","3","4","4" ],
    ]
    visited = []
    pass_cases_to_DSE_and_get_new_case_back_to_GA(cases, target, visited)
